#!/usr/bin/env bash

set -e
set -o pipefail

install_foundationdb() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local platform="$(uname | tr '[:upper:]' '[:lower:]')"
  local arch="$(uname -m)"
  local download_url=$(get_download_url $platform $arch $version)

  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir=$(mktemp -d -t foundationdb_XXXXXX)
  else
    local tmp_download_dir=$TMPDIR
  fi

  mkdir -p "${install_path}"

  local download_path="$tmp_download_dir/$(get_filename ${platform} ${arch} ${version})"
  local pkg_install_path="$tmp_download_dir/pkg"

  echo "Downloading foundationdb from ${download_url} to ${binary_path}"
  curl -Lo $download_path $download_url

  echo "Creating tmp directory"
  mkdir -p "${pkg_install_path}"

  echo "Extracting the pkg"
  xar -xf ${download_path} -C "${pkg_install_path}"

  echo "Extracting the payload"
  cd "${install_path}"
  gzcat ${pkg_install_path}/FoundationDB-clients.pkg/Payload | cpio -i -m --quiet
}

get_filename() {
    local platform="$1"
    local arch="$2"
    local version="$3"

    echo "FoundationDB-${version}_${arch}.pkg"
}

get_download_url() {
  local platform="$1"
  local arch="$2"
  local version="$3"
  local filename="$(get_filename ${platform} ${arch} ${version})"
  echo "https://github.com/apple/foundationdb/releases/download/${version}/${filename}"
}

install_foundationdb $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
